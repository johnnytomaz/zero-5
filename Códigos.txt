Códigos

const express = require('express');
const bodyParser = require('body-parser');
//protocolo de comunicacão entre apis e outros serviços cors
//CORS: authoriza para qualquer tipo de serviço (front-end, outras apis, etc)
const cors = require('cors')
const router = require('./router');
const app = express();

//Rotas
app.use(bodyParser.json());

//Função CORS para a autorização do uso da API
app.use(cors())

app.use(router);

module.exports = app;

CREATE TRIGGER Tgr_valorTotal_Insert AFTER INSERT
ON produtosdoclientes
FOR EACH ROW
BEGIN
	UPDATE carrinhos as c, produtosdoclientes as pc SET c.valorTotal = c.valorTotal + pcprodutosdoclientes
WHERE ul.id = NEW.fk_UserLogin_id and es.id = NEW.fk_Expense_id;
END$

CREATE TRIGGER Tgr_valorTotal_Insert AFTER INSERT
ON produtosdoclientes
FOR EACH ROW
BEGIN
	UPDATE carrinhos as c, produtosdoclientes as pc, produtos as p SET c.valorTotal = c.valorTotal + pc.preco
WHERE c.id = NEW.fk_Carrinho_ID and p.id = NEW.fk_Produto_ID;

CREATE TRIGGER Tgr_valorTotal_Insert AFTER INSERT
ON produtosdoclientes
FOR EACH ROW
BEGIN
	UPDATE carrinhos as c, produtosdoclientes as pc, produtos as p SET c.valorTotal = c.valorTotal + pc.preco
WHERE c.id = NEW.fk_Carrinho_ID and p.id = NEW.fk_Produto_ID;

CREATE TRIGGER Tgr_valorTotal_Delete AFTER DELETE
ON produtosdoclientes
FOR EACH ROW
BEGIN
	UPDATE carrinhos as c, produtos as p SET c.valorTotal = c.valorTotal - OLD.p.preco
WHERE c.id = OLD.fk_Carrinho_ID and p.id = OLD.fk_Produto_ID;
END$
DELIMITER ;

npx sequelize db:migrate

